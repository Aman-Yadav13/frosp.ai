apiVersion: apps/v1
kind: Deployment
metadata:
  name: service-name
  labels:
    app: service-name
spec:
  replicas: 1
  selector:
    matchLabels:
      app: service-name
  template:
    metadata:
      labels:
        app: service-name
    spec:
      volumes:
        - name: workspace-volume
          emptyDir: {}
      initContainers:
        - name: copy-s3-resources
          image: amazon/aws-cli
          command: ["/bin/sh", "-c"]
          args:
            - >
              aws s3 cp s3://fixero-repl/code/svc-name/ /workspace/ --recursive &&
              echo "Resources copied from S3";
          env:
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: aws-credentials
                  key: AWS_ACCESS_KEY_ID
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: aws-credentials
                  key: AWS_SECRET_ACCESS_KEY
          volumeMounts:
            - name: workspace-volume
              mountPath: /workspace
      containers:
        - name: rippler-service
          image: amantests01/repl-runner-service:3.0
          ports:
            - containerPort: 3001
            - containerPort: 3000
          env:
            - name: REPL_ID
              value: service-name
          volumeMounts:
            - name: workspace-volume
              mountPath: /workspace
          resources:
            requests:
              cpu: "0.5"
              memory: "512Mi"
            limits:
              cpu: "1"
              memory: "1Gi"
---
apiVersion: v1
kind: Service
metadata:
  name: service-name
spec:
  selector:
    app: service-name
  ports:
    - protocol: TCP
      name: ws
      port: 3001
      targetPort: 3001
    - protocol: TCP
      name: user
      port: 3000
      targetPort: 3000
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: service-name
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/websocket-services: "service-name"
    nginx.ingress.kubernetes.io/enable-access-log: "true"
    nginx.ingress.kubernetes.io/use-regex: "true"
spec:
  rules:
    - host: frosp-rippler.duckdns.org
      http:
        paths:
          # WebSocket path (no rewrite)
          - path: /{{replId}}/socket.io/
            pathType: Prefix
            backend:
              service:
                name: service-name
                port:
                  number: 3001
          - path: /([^/]+)/user(/|$)
            pathType: ImplementationSpecific
            backend:
              service:
                name: service-name
                port:
                  number: 3000
            # nginx.ingress.kubernetes.io/rewrite-target: /$2
